{
	"info": {
		"_postman_id": "2372d8de-0916-4256-ba3d-b719289c9582",
		"name": "matchapi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24026388"
	},
	"item": [
		{
			"name": "Test adding and removing a student record",
			"item": [
				{
					"name": "delete Justin if their is any account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,404]);",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/delete/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"delete",
								"justin"
							]
						}
					},
					"response": []
				},
				{
					"name": "add Justin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(201);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userName\" : \"justin\" ,\n    \"id\" : \"justin\" ,\n    \"password\" : \"justin\" ,\n    \"course\" : [\"math\", \"religion\"] ,\n    \"firstName\" : \"justin\" ,\n    \"lastName\" : \"justin\" ,\n    \"major\" : \"econ\" ,\n    \"year\" : 2 ,\n    \"campus\" : \"livi\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "update student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\" : \"justin\" ,\n    \"userName\" : \"justin\",\n    \"course\" : [\"philosophy\", \"cs\" , \"calc\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "check if Justin was added",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.userName).to.eql(\"justin\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/getStudent/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"getStudent",
								"justin"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete Justin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/delete/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"delete",
								"justin"
							]
						}
					},
					"response": []
				},
				{
					"name": "check if Justin was deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response[0]).to.be.undefined;",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/getStudent/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"getStudent",
								"justin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test adding and removing matches",
			"item": [
				{
					"name": "delete Justin if their is any account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"     pm.expect(pm.response.code).to.be.oneOf([200,404]);",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/delete/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"delete",
								"justin"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete eric if there is one",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"     pm.expect(pm.response.code).to.be.oneOf([200,404]);",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/delete/eric",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"delete",
								"eric"
							]
						}
					},
					"response": []
				},
				{
					"name": "add Justin for match testing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(201);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userName\" : \"justin\" ,\n    \"id\" : \"justin\" ,\n    \"password\" : \"justin\" ,\n    \"course\" : [\"math\", \"religion\"] ,\n    \"firstName\" : \"justin\" ,\n    \"lastName\" : \"justin\" ,\n    \"major\" : \"econ\" ,\n    \"year\" : 2 ,\n    \"campus\" : \"livi\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add eric for match testing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userName\" : \"eric\" ,\n    \"id\" : \"eric\" ,\n    \"password\" : \"eric\" ,\n    \"course\" : [\"math\", \"religion\"] ,\n    \"firstName\" : \"eric\" ,\n    \"lastName\" : \"eric\" ,\n    \"major\" : \"econ\" ,\n    \"year\" : 2 ,\n    \"campus\" : \"livi\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "find buddies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test(\"Test array properties\", () => {",
									"    //areas includes \"goods\"",
									"    pm.expect(jsonData).not.equal(null);",
									"  pm.expect(jsonData.id).not.equal(null);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/students/matches/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"matches",
								"justin"
							]
						}
					},
					"response": []
				},
				{
					"name": "add a request from eric to justin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(201);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\" : \"eric+justin\" ,\n    \"userTwoId\" : \"justin\",\n    \"userOneId\" : \"eric\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/matchAdd",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"matchAdd"
							]
						}
					},
					"response": []
				},
				{
					"name": "areMatched",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json()).to.equal(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/areMatched/eric/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"areMatched",
								"eric",
								"justin"
							]
						}
					},
					"response": []
				},
				{
					"name": "findRequests of justin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).not.equal(null);",
									"    pm.expect(jsonData[0].id).not.equal(null);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/findRequests/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"findRequests",
								"justin"
							]
						}
					},
					"response": []
				},
				{
					"name": "findRequestsSent of eric",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).not.equal(null);",
									"    pm.expect(jsonData[0].id).not.equal(null);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/findRequestsSent/eric",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"findRequestsSent",
								"eric"
							]
						}
					},
					"response": []
				},
				{
					"name": "add a request from eric to justin Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(201);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\" : \"justin+eric\" ,\n    \"userOneId\" : \"justin\",\n    \"userTwoId\" : \"eric\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/matchAdd",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"matchAdd"
							]
						}
					},
					"response": []
				},
				{
					"name": "areConfirmedMatched",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json()).to.equal(2);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/areMatched/eric/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"areMatched",
								"eric",
								"justin"
							]
						}
					},
					"response": []
				},
				{
					"name": "findConfirmedMatches of justin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).not.equal(null);",
									"    pm.expect(jsonData[0].id).not.equal(null);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/findConfirmedMatches/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"findConfirmedMatches",
								"justin"
							]
						}
					},
					"response": []
				},
				{
					"name": "findConfirmedMatches of eric",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).not.equal(null);",
									"    pm.expect(jsonData[0].id).not.equal(null);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/findConfirmedMatches/eric",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"findConfirmedMatches",
								"eric"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all confirmed matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test(\"Test array properties\", () => {",
									"    //areas includes \"goods\"",
									"    pm.expect(jsonData).not.equal(null);",
									"    pm.expect(jsonData[0].id).not.equal(null);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/getAllConfirmedMatches",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"getAllConfirmedMatches"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete eric",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"     pm.expect(pm.response.code).to.be.oneOf([200,404]);",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/delete/eric",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"delete",
								"eric"
							]
						}
					},
					"response": []
				},
				{
					"name": "no confirmed matches of justin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/findConfirmedMatches/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"findConfirmedMatches",
								"justin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test adding and removing courses",
			"item": [
				{
					"name": "delete course 99999999 for testing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,404])",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/deleteCourse/99999999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"deleteCourse",
								"99999999"
							]
						}
					},
					"response": []
				},
				{
					"name": "add course for testing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(201);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\" : \"99999999\" ,\n    \"courseName\" : \"Match test course\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/addCourse",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"addCourse"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all courses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).not.equal(null);",
									"    pm.expect(jsonData[0].id).not.equal(null);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/getAllCourses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"getAllCourses"
							]
						}
					},
					"response": []
				},
				{
					"name": "get course by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).not.equal(null);",
									"    pm.expect(jsonData.id).not.equal(null);",
									"    pm.expect(jsonData.courseName).not.equal(null);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/getCourseById/99999999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"getCourseById",
								"99999999"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/deleteCourse/99999999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"deleteCourse",
								"99999999"
							]
						}
					},
					"response": []
				},
				{
					"name": "check if course was deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response[0]).to.be.undefined;",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/getCourseById/99999999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"getCourseById",
								"99999999"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Miscellaneous Tests",
			"item": [
				{
					"name": "fetch all students",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test(\"Test array properties\", () => {",
									"    //areas includes \"goods\"",
									"    pm.expect(jsonData).not.equal(null);",
									"    pm.expect(jsonData[0].userName).not.equal(null);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/getAll",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"getAll"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Clean Up",
			"item": [
				{
					"name": "delete Justin if their is any account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,404]);",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/delete/justin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"delete",
								"justin"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete eric if there is one",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"     pm.expect(pm.response.code).to.be.oneOf([200,404]);",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/students/delete/eric",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"delete",
								"eric"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete course 99999999 for testing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response validation\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,404])",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/students/deleteCourse/99999999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"students",
								"deleteCourse",
								"99999999"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}